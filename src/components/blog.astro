---
import Icon from "astro-icon";
import BlogHeader1 from "@assets/blog-header1.svg";
import BlogHeader2 from "@assets/blog-header2.svg";
import { Image } from "astro:assets";

const { blog } = Astro.props;
const { button_text, button_url, first_section, second_section } = blog;
---

<section class="section-y">
  <div class="header text-animation-title">
    <Image
      src={BlogHeader1}
      alt=""
      class="header-item animate-textAnimation"
    />
    <Image
      src={BlogHeader2}
      alt=""
      class="header-item animate-textAnimation"
    />
  </div>
  <div class="blog">
    <div class="blog-section">
      {
        first_section.map((item) => (
          <a href={item.link} target="_blank" rel="nofollow">
            <div class={`blog-section-item ${item.type}`}>
              <div class="text-content">
                <div class="text-headline">{item.headline}</div>
                <div class="text-title-2">{item.title}</div>
              </div>
              <div class="source">
                {item.sources.map((source) => (
                  <div class="source-item">
                    <div class="text-headline">{source}</div>
                  </div>
                ))}
              </div>
              {item.link_icon && <Icon name="link" class="link" />}
            </div>
          </a>
        ))
      }
    </div>
    <div class="blog-section">
      {
        second_section.map((item) => (
          <a href={item.link} target="_blank" rel="nofollow">
            <div class={`blog-section-item ${item.type}`}>
              <div class="text-content">
                <div class="text-headline">{item.headline}</div>
                <div class="text-title-2">{item.title}</div>
              </div>
              <div class="source">
                {item.sources.map((source) => (
                  <div class="source-item">
                    <div class="text-headline">{source}</div>
                  </div>
                ))}
              </div>
              {item.link_icon && <Icon name="link" class="link" />}
            </div>
          </a>
        ))
      }
      <a href={button_url} target="_blank" rel="nofollow">
        <button>
          <div class="text-button">{button_text}</div>
        </button>
      </a>
    </div>
  </div>
</section>

<style lang="scss">
  @import "../styles/global.scss";

  .header {
    animation: textAnimation 75s linear infinite;
  }
  section {
    position: relative;
    overflow: hidden;
  }

  .link {
    position: absolute;
    bottom: 24px;
    right: 24px;
    height: 96px;
  }

  .header {
    display: flex;

    &-item {
      height: 100%;
      max-width: none;
    }
  }

  .source {
    display: flex;
    flex-wrap: wrap;
    gap: 8px;

    &-item {
      display: flex;
      align-items: center;
      justify-content: center;
      border-radius: 100px;
      border: 2px solid;
      padding: 4px 16px;
    }
  }

  button,
  .blog-section-item {
    transition: background-color 0.3s;
  }

  .blog {
    display: grid;
    gap: 16px;
    padding: 0 16px;

    &-section {
      display: flex;
      flex-direction: column;
      gap: 16px;

      &-item {
        position: relative;
        display: flex;
        flex-direction: column;
        justify-content: space-between;
        height: 280px;
        width: 100%;
        cursor: pointer;
        border-radius: 24px;
        padding: 24px;

        &.black {
          color: white;
          background-color: black;

          &:hover {
            background-color: $black-hover;
          }
        }

        &.accent {
          background-color: $c-accent;

          &:hover {
            background-color: $c-accent-hover;
          }
        }

        &.gray {
          height: 450px;
          background-color: $c-gray;

          &:hover {
            background-color: $c-gray-hover;
          }
        }

        &.gray,
        &.accent {
          .source-item {
            border-color: black;
          }
        }
      }
    }
  }

  .text-content {
    display: flex;
    flex-direction: column;
    padding-right: 32px;
    gap: 8px;
  }

  button {
    width: 100%;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    padding: 70px;
    border-radius: 300px;
    color: black;
    background-color: $c-light-gray;
    cursor: pointer;

    &:hover {
      background-color: $c-light-gray-hover;
    }
  }

  @include desktop {
    .blog {
      grid-template-columns: repeat(2, minmax(0, 1fr));

      &-section {
        gap: 0;
        
        &-item.gray {
          height: 394px;
        }
      }
    }
  }
</style>
